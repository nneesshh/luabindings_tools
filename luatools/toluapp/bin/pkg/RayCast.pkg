//#ifndef GODOT_CPP_RAYCAST_HPP
//#define GODOT_CPP_RAYCAST_HPP


$#include <stdint.h>

$#include "UsingGodot.hpp"


namespace godot {

class Object;

class Spatial;
class RayCast : public Spatial {
public:


	// enums

	// constants

	// methods
	void set_enabled(const bool enabled);
	bool is_enabled() const;
	void set_cast_to(const Vector3 local_point);
	Vector3 get_cast_to() const;
	bool is_colliding() const;
	void force_raycast_update();
	Object *get_collider() const;
	int64_t get_collider_shape() const;
	Vector3 get_collision_point() const;
	Vector3 get_collision_normal() const;
	void add_exception_rid(const RID rid);
	void add_exception(const Object *node);
	void remove_exception_rid(const RID rid);
	void remove_exception(const Object *node);
	void clear_exceptions();
	void set_collision_mask(const int64_t mask);
	int64_t get_collision_mask() const;
	void set_collision_mask_bit(const int64_t bit, const bool value);
	bool get_collision_mask_bit(const int64_t bit) const;
	void set_exclude_parent_body(const bool mask);
	bool get_exclude_parent_body() const;
	void set_collide_with_areas(const bool enable);
	bool is_collide_with_areas_enabled() const;
	void set_collide_with_bodies(const bool enable);
	bool is_collide_with_bodies_enabled() const;
};

}

//#endif
