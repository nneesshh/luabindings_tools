//#ifndef GODOT_CPP_NETWORKEDMULTIPLAYERPEER_HPP
//#define GODOT_CPP_NETWORKEDMULTIPLAYERPEER_HPP


$#include <stdint.h>

$#include "UsingGodot.hpp"


namespace godot {


class PacketPeer;
class NetworkedMultiplayerPeer : public PacketPeer {
public:


	// enums
	enum ConnectionStatus {
		CONNECTION_CONNECTING = 1,
		CONNECTION_CONNECTED = 2,
		CONNECTION_DISCONNECTED = 0,
	};
	enum TransferMode {
		TRANSFER_MODE_UNRELIABLE_ORDERED = 1,
		TRANSFER_MODE_RELIABLE = 2,
		TRANSFER_MODE_UNRELIABLE = 0,
	};

	// constants
	const static int TARGET_PEER_SERVER = 1;
	const static int TARGET_PEER_BROADCAST = 0;

	// methods
	void set_transfer_mode(const int64_t mode);
	NetworkedMultiplayerPeer::TransferMode get_transfer_mode() const;
	void set_target_peer(const int64_t id);
	int64_t get_packet_peer() const;
	void poll();
	NetworkedMultiplayerPeer::ConnectionStatus get_connection_status() const;
	int64_t get_unique_id() const;
	void set_refuse_new_connections(const bool enable);
	bool is_refusing_new_connections() const;
};

}

//#endif
