//#ifndef GODOT_CPP_TEXTURE_HPP
//#define GODOT_CPP_TEXTURE_HPP


$#include <stdint.h>

$#include "UsingGodot.hpp"


namespace godot {

class Texture;
class Image;

class Resource;
class Texture : public Resource {
public:


	// enums
	enum Flags {
		FLAG_CONVERT_TO_LINEAR = 16,
		FLAG_VIDEO_SURFACE = 2048,
		FLAG_MIRRORED_REPEAT = 32,
		FLAG_ANISOTROPIC_FILTER = 8,
		FLAGS_DEFAULT = 7,
		FLAG_MIPMAPS = 1,
		FLAG_FILTER = 4,
		FLAG_REPEAT = 2,
	};

	// constants

	// methods
	int64_t get_width() const;
	int64_t get_height() const;
	Vector2 get_size() const;
	bool has_alpha() const;
	void set_flags(const int64_t flags);
	int64_t get_flags() const;
	void draw(const RID canvas_item, const Vector2 position, const Color modulate = Color(1,1,1,1), const bool transpose = false, const godot__ref_Texture_ normal_map = nullptr) const;
	void draw_rect(const RID canvas_item, const Rect2 rect, const bool tile, const Color modulate = Color(1,1,1,1), const bool transpose = false, const godot__ref_Texture_ normal_map = nullptr) const;
	void draw_rect_region(const RID canvas_item, const Rect2 rect, const Rect2 src_rect, const Color modulate = Color(1,1,1,1), const bool transpose = false, const godot__ref_Texture_ normal_map = nullptr, const bool clip_uv = true) const;
	godot__ref_Image_ get_data() const;
};

}

//#endif
