//#ifndef GODOT_CPP_PERFORMANCE_HPP
//#define GODOT_CPP_PERFORMANCE_HPP


$#include <stdint.h>

$#include "UsingGodot.hpp"


namespace godot {


class Object;
class Performance : public Object {
public:


	// enums
	enum Monitor {
		RENDER_VERTICES_IN_FRAME = 12,
		PHYSICS_3D_ISLAND_COUNT = 26,
		PHYSICS_2D_ACTIVE_OBJECTS = 21,
		MEMORY_STATIC_MAX = 5,
		MONITOR_MAX = 28,
		OBJECT_COUNT = 8,
		MEMORY_DYNAMIC_MAX = 6,
		RENDER_SHADER_CHANGES_IN_FRAME = 14,
		OBJECT_RESOURCE_COUNT = 9,
		RENDER_DRAW_CALLS_IN_FRAME = 16,
		RENDER_TEXTURE_MEM_USED = 18,
		TIME_PHYSICS_PROCESS = 2,
		TIME_FPS = 0,
		RENDER_VERTEX_MEM_USED = 19,
		MEMORY_MESSAGE_BUFFER_MAX = 7,
		TIME_PROCESS = 1,
		RENDER_USAGE_VIDEO_MEM_TOTAL = 20,
		PHYSICS_3D_ACTIVE_OBJECTS = 24,
		PHYSICS_2D_ISLAND_COUNT = 23,
		PHYSICS_2D_COLLISION_PAIRS = 22,
		RENDER_VIDEO_MEM_USED = 17,
		PHYSICS_3D_COLLISION_PAIRS = 25,
		AUDIO_OUTPUT_LATENCY = 27,
		RENDER_OBJECTS_IN_FRAME = 11,
		RENDER_SURFACE_CHANGES_IN_FRAME = 15,
		RENDER_MATERIAL_CHANGES_IN_FRAME = 13,
		MEMORY_STATIC = 3,
		OBJECT_NODE_COUNT = 10,
		MEMORY_DYNAMIC = 4,
	};

	// constants

	// methods
	static double get_monitor(const int64_t monitor);
};

}

//#endif
