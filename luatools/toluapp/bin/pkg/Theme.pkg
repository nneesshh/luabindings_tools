//#ifndef GODOT_CPP_THEME_HPP
//#define GODOT_CPP_THEME_HPP


$#include <stdint.h>

$#include "UsingGodot.hpp"


namespace godot {

class Texture;
class StyleBox;
class Font;

class Resource;
class Theme : public Resource {
public:


	// enums

	// constants

	// methods
	void set_icon(const String name, const String type, const godot__ref_Texture_ texture);
	godot__ref_Texture_ get_icon(const String name, const String type) const;
	bool has_icon(const String name, const String type) const;
	void clear_icon(const String name, const String type);
	PoolStringArray get_icon_list(const String type) const;
	void set_stylebox(const String name, const String type, const godot__ref_StyleBox_ texture);
	godot__ref_StyleBox_ get_stylebox(const String name, const String type) const;
	bool has_stylebox(const String name, const String type) const;
	void clear_stylebox(const String name, const String type);
	PoolStringArray get_stylebox_list(const String type) const;
	PoolStringArray get_stylebox_types() const;
	void set_font(const String name, const String type, const godot__ref_Font_ font);
	godot__ref_Font_ get_font(const String name, const String type) const;
	bool has_font(const String name, const String type) const;
	void clear_font(const String name, const String type);
	PoolStringArray get_font_list(const String type) const;
	void set_color(const String name, const String type, const Color color);
	Color get_color(const String name, const String type) const;
	bool has_color(const String name, const String type) const;
	void clear_color(const String name, const String type);
	PoolStringArray get_color_list(const String type) const;
	void set_constant(const String name, const String type, const int64_t constant);
	int64_t get_constant(const String name, const String type) const;
	bool has_constant(const String name, const String type) const;
	void clear_constant(const String name, const String type);
	PoolStringArray get_constant_list(const String type) const;
	void set_default_font(const godot__ref_Font_ font);
	godot__ref_Font_ get_default_font() const;
	PoolStringArray get_type_list(const String type) const;
	void _emit_theme_changed();
	void copy_default_theme();
};

}

//#endif
