//#ifndef GODOT_CPP_SKELETONIK_HPP
//#define GODOT_CPP_SKELETONIK_HPP


$#include <stdint.h>

$#include "UsingGodot.hpp"


namespace godot {

class Skeleton;

class Node;
class SkeletonIK : public Node {
public:


	// enums

	// constants

	// methods
	void set_root_bone(const String root_bone);
	String get_root_bone() const;
	void set_tip_bone(const String tip_bone);
	String get_tip_bone() const;
	void set_interpolation(const double interpolation);
	double get_interpolation() const;
	void set_target_transform(const Transform target);
	Transform get_target_transform() const;
	void set_target_node(const NodePath node);
	NodePath get_target_node();
	void set_use_magnet(const bool use);
	bool is_using_magnet() const;
	void set_magnet_position(const Vector3 local_position);
	Vector3 get_magnet_position() const;
	Skeleton *get_parent_skeleton() const;
	bool is_running();
	void set_min_distance(const double min_distance);
	double get_min_distance() const;
	void set_max_iterations(const int64_t iterations);
	int64_t get_max_iterations() const;
	void start(const bool one_time = false);
	void stop();
};

}

//#endif
