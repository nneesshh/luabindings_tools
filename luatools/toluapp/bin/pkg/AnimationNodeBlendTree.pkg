//#ifndef GODOT_CPP_ANIMATIONNODEBLENDTREE_HPP
//#define GODOT_CPP_ANIMATIONNODEBLENDTREE_HPP


$#include <stdint.h>

$#include "UsingGodot.hpp"


namespace godot {

class AnimationNode;

class AnimationRootNode;
class AnimationNodeBlendTree : public AnimationRootNode {
public:


	// enums

	// constants
	const static int CONNECTION_ERROR_CONNECTION_EXISTS = 5;
	const static int CONNECTION_ERROR_SAME_NODE = 4;
	const static int CONNECTION_ERROR_NO_INPUT = 1;
	const static int CONNECTION_ERROR_NO_OUTPUT = 3;
	const static int CONNECTION_OK = 0;
	const static int CONNECTION_ERROR_NO_INPUT_INDEX = 2;

	// methods
	void add_node(const String name, const godot__ref_AnimationNode_ node, const Vector2 position = Vector2(0, 0));
	godot__ref_AnimationNode_ get_node(const String name) const;
	void remove_node(const String name);
	void rename_node(const String name, const String new_name);
	bool has_node(const String name) const;
	void connect_node(const String input_node, const int64_t input_index, const String output_node);
	void disconnect_node(const String input_node, const int64_t input_index);
	void set_node_position(const String name, const Vector2 position);
	Vector2 get_node_position(const String name) const;
	void set_graph_offset(const Vector2 offset);
	Vector2 get_graph_offset() const;
	void _tree_changed();
	void _node_changed(const String node);
};

}

//#endif
