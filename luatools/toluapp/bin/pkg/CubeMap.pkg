//#ifndef GODOT_CPP_CUBEMAP_HPP
//#define GODOT_CPP_CUBEMAP_HPP


$#include <stdint.h>

$#include "UsingGodot.hpp"


namespace godot {

class Image;

class Resource;
class CubeMap : public Resource {
public:


	// enums
	enum Flags {
		FLAGS_DEFAULT = 7,
		FLAG_MIPMAPS = 1,
		FLAG_FILTER = 4,
		FLAG_REPEAT = 2,
	};
	enum Side {
		SIDE_BOTTOM = 2,
		SIDE_TOP = 3,
		SIDE_RIGHT = 1,
		SIDE_BACK = 5,
		SIDE_LEFT = 0,
		SIDE_FRONT = 4,
	};
	enum Storage {
		STORAGE_COMPRESS_LOSSY = 1,
		STORAGE_COMPRESS_LOSSLESS = 2,
		STORAGE_RAW = 0,
	};

	// constants

	// methods
	int64_t get_width() const;
	int64_t get_height() const;
	void set_flags(const int64_t flags);
	int64_t get_flags() const;
	void set_side(const int64_t side, const godot__ref_Image_ image);
	godot__ref_Image_ get_side(const int64_t side) const;
	void set_storage(const int64_t mode);
	CubeMap::Storage get_storage() const;
	void set_lossy_storage_quality(const double quality);
	double get_lossy_storage_quality() const;
};

}

//#endif
