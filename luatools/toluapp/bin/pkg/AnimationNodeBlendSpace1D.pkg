//#ifndef GODOT_CPP_ANIMATIONNODEBLENDSPACE1D_HPP
//#define GODOT_CPP_ANIMATIONNODEBLENDSPACE1D_HPP


$#include <stdint.h>

$#include "UsingGodot.hpp"


namespace godot {

class AnimationRootNode;

class AnimationRootNode;
class AnimationNodeBlendSpace1D : public AnimationRootNode {
public:


	// enums

	// constants

	// methods
	void add_blend_point(const godot__ref_AnimationRootNode_ node, const double pos, const int64_t at_index = -1);
	void set_blend_point_position(const int64_t point, const double pos);
	double get_blend_point_position(const int64_t point) const;
	void set_blend_point_node(const int64_t point, const godot__ref_AnimationRootNode_ node);
	godot__ref_AnimationRootNode_ get_blend_point_node(const int64_t point) const;
	void remove_blend_point(const int64_t point);
	int64_t get_blend_point_count() const;
	void set_min_space(const double min_space);
	double get_min_space() const;
	void set_max_space(const double max_space);
	double get_max_space() const;
	void set_snap(const double snap);
	double get_snap() const;
	void set_value_label(const String text);
	String get_value_label() const;
	void _add_blend_point(const int64_t index, const godot__ref_AnimationRootNode_ node);
	void _tree_changed();
};

}

//#endif
