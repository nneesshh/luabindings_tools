//#ifndef GODOT_CPP_UNDOREDO_HPP
//#define GODOT_CPP_UNDOREDO_HPP


$#include <stdint.h>

$#include "UsingGodot.hpp"


namespace godot {

class Object;

class Object;
class UndoRedo : public Object {
public:


	// enums
	enum MergeMode {
		MERGE_ENDS = 1,
		MERGE_ALL = 2,
		MERGE_DISABLE = 0,
	};

	// constants

	// methods
	void create_action(const String name, const int64_t merge_mode = 0);
	void commit_action();
	Variant add_do_method(const Object *object, const String method, const Array& __var_args);
	Variant add_undo_method(const Object *object, const String method, const Array& __var_args);
	void add_do_property(const Object *object, const String property, const Variant value);
	void add_undo_property(const Object *object, const String property, const Variant value);
	void add_do_reference(const Object *object);
	void add_undo_reference(const Object *object);
	void clear_history();
	String get_current_action_name() const;
	int64_t get_version() const;
	bool redo();
	bool undo();
};

}

//#endif
