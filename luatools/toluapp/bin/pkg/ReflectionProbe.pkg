//#ifndef GODOT_CPP_REFLECTIONPROBE_HPP
//#define GODOT_CPP_REFLECTIONPROBE_HPP


$#include <stdint.h>

$#include "UsingGodot.hpp"


namespace godot {


class VisualInstance;
class ReflectionProbe : public VisualInstance {
public:


	// enums
	enum UpdateMode {
		UPDATE_ALWAYS = 1,
		UPDATE_ONCE = 0,
	};

	// constants

	// methods
	void set_intensity(const double intensity);
	double get_intensity() const;
	void set_interior_ambient(const Color ambient);
	Color get_interior_ambient() const;
	void set_interior_ambient_energy(const double ambient_energy);
	double get_interior_ambient_energy() const;
	void set_interior_ambient_probe_contribution(const double ambient_probe_contribution);
	double get_interior_ambient_probe_contribution() const;
	void set_max_distance(const double max_distance);
	double get_max_distance() const;
	void set_extents(const Vector3 extents);
	Vector3 get_extents() const;
	void set_origin_offset(const Vector3 origin_offset);
	Vector3 get_origin_offset() const;
	void set_as_interior(const bool enable);
	bool is_set_as_interior() const;
	void set_enable_box_projection(const bool enable);
	bool is_box_projection_enabled() const;
	void set_enable_shadows(const bool enable);
	bool are_shadows_enabled() const;
	void set_cull_mask(const int64_t layers);
	int64_t get_cull_mask() const;
	void set_update_mode(const int64_t mode);
	ReflectionProbe::UpdateMode get_update_mode() const;
};

}

//#endif
